package main

import (
"fmt"
"net"
"strconv"

//"strconv"
)

func main() {
	var digit byte

	
	fmt.Println("桁数を入力してください")
	fmt.Scan(&digit)  
  	digitSlice := []byte{0,digit}
 

	//DIAL
	conn, err := net.Dial("tcp",":9600")
	if err != nil{
		fmt.Println("error: ", err)
	} else {
		fmt.Println("dial success")
	}

	data1 := []byte{75,79,74,73}

	data1 = append(digitSlice[:], data1[:]...)
	fmt.Println(data1)


	
	n1, err1 := conn.Write(data1)
	if (err1 != nil) {
	fmt.Println("cannot write", err1)
	fmt.Println(n1)
	} else {
	fmt.Println("digit sent")
	}

	buf1 := make([]byte, 32)
     n2, err2 := conn.Read(buf1)
	 if (err2 != nil){
		fmt.Println("cannot read", err2)
		fmt.Println(n2)
		fmt.Println(buf1[:n2])

	 } else {
		fmt.Println(buf1)
		fmt.Println("received")
	 } 

	//data2 := []byte{0x02,0,0,0,0,0,0,0,0,0,0x01,0x02,0x03,0,0,0,0,0,0,0}
	
	for{
	addAnswer := addAnswer(digitSlice,digit)
 	fmt.Println(addAnswer)
	
	n3, err3 := conn.Write(addAnswer)
	if (err3 != nil) {
	fmt.Println("cannot write", err3)
	fmt.Println(n3)
	} else {
	fmt.Println("answer sent")
	}

	 buf2 := make([]byte, 32)
     n4, err4 := conn.Read(buf2)
	 if (err4 != nil){
		fmt.Println("cannot read", err4)
		fmt.Println(buf2[:n3])
		fmt.Println(n4)
	 } else {
		fmt.Println("answer response received")
		fmt.Println(buf2)
	 } 

	 if(buf2[1] == 0){
		break
	 }

	 }
}

func addAnswer(digitSlice []byte, digit byte) []byte {
	var answer string
	var forty_eight byte
	
	  fmt.Println("回答を入力してください")
	  fmt.Scan(&answer)  
	
	forty_eight = 48
	digitLen1 := digitSlice[1] + forty_eight
	digitLen2 := []byte{0,digitLen1}
	digitLen3 := string(digitLen2[1])//桁数をbyteからstringに変換
	digitLen4, _ := strconv.Atoi(digitLen3)//桁数をbyteからintに変換
  
	data2 := []byte{0x02,0,0,0,0,0,0,0,0,0,0x01,0x02,0x03,0,0,0,0,0,0,0}
	//10番目まで取って、その後ろに入力した数字を入れる
	answerSlice := []byte(answer)
	answerSlice2 := data2[0:10]
	
  
	for i:=0; i<digitLen4; i++ {
	  answerSlice0 := answerSlice[i] - forty_eight //一桁目を取得
	  answerSlice1 := []byte{0,answerSlice0} //byte配列に変換
	  fmt.Println(answerSlice1)
	  answerSlice2 = append(answerSlice2,answerSlice1[1])
	}
  
	for i:=0; i<10-digitLen4+12; i++{
	  answerSlice2 = append(answerSlice2,0)
	}
	//fmt.Println(answerSlice2)
	return answerSlice2
  }
  

